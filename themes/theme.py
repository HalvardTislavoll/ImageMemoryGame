#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0s
#  in conjunction with Tcl version 8.6
#    Jul 08, 2023 05:37:54 AM PDT  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_script = sys.argv[0]
_location = os.path.dirname(_script)

import theme_support

_bgcolor = 'wheat'  # X11 color: #f5deb3
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = '#b2c9f4' # Closest X11 color: 'SlateGray2'
_ana1color = '#eaf4b2' # Closest X11 color: '{pale goldenrod}'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black' 
_tabfg2 = 'black' 
_tabbg1 = 'grey75' 
_tabbg2 = 'grey89' 
_bgmode = 'light' 
font13 = "-family {DejaVu Sans} -size 14"

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran:
       return
    theme_support.root.tk.call('source', './themes/page-legacy.tcl')
    #except: pass
    style = ttk.Style()
    style.theme_use('page-legacy')
    global _fgcolor, _bgcolor, _hcolor
    _fgcolor = style.lookup('TButton', 'foreground')
    _bgcolor = style.lookup('TButton', 'background')
    _hcolor = style.lookup('TButton', 'highlightcolor')
    _style_code_ran = 1

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+660+210")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(0,  0)
        top.title("Toplevel 0")
        top.configure(background="wheat")
        top.configure(highlightbackground="wheat")
        top.configure(highlightcolor="black")

        self.top = top

        _style_code()
        self.TButton1 = ttk.Button(self.top)
        self.TButton1.place(x=290, y=110, height=32, width=103)
        self.TButton1.configure(command=theme_support.quit)
        self.TButton1.configure(text='''Quit''')
        self.TButton1.configure(compound='left')
        self.TLabelframe1 = ttk.Labelframe(self.top)
        self.TLabelframe1.place(x=190, y=200, height=75, width=150)
        self.TLabelframe1.configure(relief='')
        self.TLabelframe1.configure(text='''Tlabelframe''')

def start_up():
    theme_support.main()

if __name__ == '__main__':
    theme_support.main()




