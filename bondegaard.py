#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0D
#  in conjunction with Tcl version 8.6
#    Nov 25, 2023 08:02:05 PM CET  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_script = sys.argv[0]
_location = os.path.dirname(_script)

import bondegaard_support

_bgcolor = 'wheat'
_fgcolor = 'black'

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran: return
        
    try: bondegaard_support.root.tk.call('source',
                os.path.join(_location, 'themes', 'page-wheat.tcl'))
    except: pass
    style = ttk.Style()
    style.theme_use('page-wheat')
    style.configure('.', font = "TkDefaultFont")
    #global _fgcolor, _bgcolor
    #_fgcolor = style.lookup('.', 'foreground')
    #_bgcolor = style.lookup('.', 'background')
    _style_code_ran = 1

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("1356x738+2231+95")
        top.minsize(1, 1)
        top.maxsize(3825, 1050)
        top.resizable(0,  0)
        top.title("Toplevel 0")
        top.configure(background="wheat")
        top.configure(highlightbackground="wheat")
        top.configure(highlightcolor="black")

        self.top = top

        self.Frame0 = tk.Frame(self.top)
        self.Frame0.place(x=676, y=0, height=680, width=678)
        self.Frame0.configure(relief='flat')
        self.Frame0.configure(borderwidth="2")
        self.Frame0.configure(background="wheat")
        self.Frame0.configure(highlightbackground="wheat")

        self.Canvas1 = tk.Canvas(self.Frame0)
        self.Canvas1.place(x=10, y=7, height=665, width=659)
        self.Canvas1.configure(background="wheat")
        self.Canvas1.configure(borderwidth="4")
        self.Canvas1.configure(highlightbackground="wheat")
        self.Canvas1.configure(selectbackground="#d9d9d9")

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(x=0, y=0, height=680, width=678)
        self.Frame1.configure(relief='flat')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(background="wheat")
        self.Frame1.configure(highlightbackground="wheat")

        self.Canvas0 = tk.Canvas(self.Frame1)
        self.Canvas0.place(x=10, y=10, height=660, width=660)
        self.Canvas0.configure(background="wheat")
        self.Canvas0.configure(borderwidth="4")
        self.Canvas0.configure(highlightbackground="wheat")
        self.Canvas0.configure(selectbackground="#d9d9d9")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg='wheat',fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(self.menubar, activebackground='#d9d9d9'
                ,activeforeground='black', background='wheat'
                ,disabledforeground='#b8a786'
                ,font="-family {DejaVu Sans} -size 10", foreground='black'
                ,tearoff=0)
        self.menubar.add_cascade(activebackground='#d9d9d9'
                ,activeforeground='black', compound='left'
                ,font="-family {DejaVu Sans} -size 10", label='File'
                ,menu=self.sub_menu, )
        photo_location = os.path.join(_location,"./assets/button_graphics/preferences.png")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.sub_menu.add_command(activebackground='#d9d9d9'
                ,activeforeground='black'
                ,command=bondegaard_support.on_preferences, compound='left'
                ,font="-family {DejaVu Sans} -size 10", image=_img0
                ,label='Preferences')
        photo_location = os.path.join(_location,"./assets/button_graphics/app-exit.png")
        global _img1
        _img1 = tk.PhotoImage(file=photo_location)
        self.sub_menu.add_command(activebackground='#d9d9d9'
                ,activeforeground='black', command=bondegaard_support.on_TBtnExit
                ,compound='left', font="-family {DejaVu Sans} -size 10"
                ,image=_img1, label='Exit')

        _style_code()
        self.TLbl_Time = ttk.Label(self.top)
        self.TLbl_Time.place(x=16, y=687, height=40, width=100)
        self.TLbl_Time.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.TLbl_Time.configure(relief="flat")
        self.TLbl_Time.configure(anchor='center')
        self.TLbl_Time.configure(justify='left')
        self.TLbl_Time.configure(text='''Time''')
        self.TLbl_Time.configure(compound='left')

        self.TLbl_Status = ttk.Label(self.top)
        self.TLbl_Status.place(x=202, y=687, height=40, width=955)
        self.TLbl_Status.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.TLbl_Status.configure(relief="flat")
        self.TLbl_Status.configure(anchor='center')
        self.TLbl_Status.configure(justify='left')
        self.TLbl_Status.configure(text='''Status''')
        self.TLbl_Status.configure(compound='left')

        self.TBtnExit = ttk.Button(self.top)
        self.TBtnExit.place(x=1241, y=687, height=40, width=100)
        self.TBtnExit.configure(command=bondegaard_support.on_TBtnExit)
        self.TBtnExit.configure(text='''Exit''')
        photo_location = os.path.join(_location,"./assets/button_graphics/app-exit.png")
        global _img2
        _img2 = tk.PhotoImage(file=photo_location)
        self.TBtnExit.configure(image=_img2)
        self.TBtnExit.configure(compound='left')

        self.TSeparator1 = ttk.Separator(self.top)
        self.TSeparator1.place(x=0, y=681, width=1356)

        self.Spinbox1 = tk.Spinbox(self.top, from_=1.0, to=9.0)
        self.Spinbox1.place(x=1181, y=687, height=40, width=48)
        self.Spinbox1.configure(activebackground="#d9d9d9")
        self.Spinbox1.configure(background="white")
        self.Spinbox1.configure(command=bondegaard_support.on_spinbox)
        self.Spinbox1.configure(disabledbackground="#f5deb3")
        self.Spinbox1.configure(disabledforeground="black")
        self.Spinbox1.configure(font="-family {DejaVu Sans} -size 10")
        self.Spinbox1.configure(foreground="white")
        self.Spinbox1.configure(highlightbackground="black")
        self.Spinbox1.configure(readonlybackground="#f5deb3")
        self.Spinbox1.configure(selectbackground="#d9d9d9")

        self.Frame2 = tk.Frame(self.top)
        self.Frame2.place(x=9, y=10, height=665, width=668)
        self.Frame2.configure(relief='flat')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(background="wheat")
        self.Frame2.configure(highlightbackground="wheat")

        self.Canvas2_1 = tk.Canvas(self.Frame2)
        self.Canvas2_1.place(x=7, y=7, height=210, width=210)
        self.Canvas2_1.configure(background="wheat")
        self.Canvas2_1.configure(borderwidth="4")
        self.Canvas2_1.configure(highlightbackground="wheat")
        self.Canvas2_1.configure(relief="solid")
        self.Canvas2_1.configure(selectbackground="#d9d9d9")

        self.Canvas2_2 = tk.Canvas(self.Frame2)
        self.Canvas2_2.place(x=226, y=7, height=210, width=210)
        self.Canvas2_2.configure(background="wheat")
        self.Canvas2_2.configure(borderwidth="4")
        self.Canvas2_2.configure(highlightbackground="wheat")
        self.Canvas2_2.configure(relief="solid")
        self.Canvas2_2.configure(selectbackground="#d9d9d9")

        self.Canvas2_3 = tk.Canvas(self.Frame2)
        self.Canvas2_3.place(x=446, y=7, height=210, width=210)
        self.Canvas2_3.configure(background="wheat")
        self.Canvas2_3.configure(borderwidth="4")
        self.Canvas2_3.configure(highlightbackground="wheat")
        self.Canvas2_3.configure(relief="solid")
        self.Canvas2_3.configure(selectbackground="#d9d9d9")

        self.Canvas2_4 = tk.Canvas(self.Frame2)
        self.Canvas2_4.place(x=7, y=226, height=210, width=210)
        self.Canvas2_4.configure(background="wheat")
        self.Canvas2_4.configure(borderwidth="4")
        self.Canvas2_4.configure(highlightbackground="wheat")
        self.Canvas2_4.configure(relief="solid")
        self.Canvas2_4.configure(selectbackground="#d9d9d9")

        self.Canvas2_5 = tk.Canvas(self.Frame2)
        self.Canvas2_5.place(x=226, y=226, height=210, width=210)
        self.Canvas2_5.configure(background="wheat")
        self.Canvas2_5.configure(borderwidth="4")
        self.Canvas2_5.configure(highlightbackground="wheat")
        self.Canvas2_5.configure(relief="solid")
        self.Canvas2_5.configure(selectbackground="#d9d9d9")

        self.Canvas2_6 = tk.Canvas(self.Frame2)
        self.Canvas2_6.place(x=446, y=226, height=210, width=210)
        self.Canvas2_6.configure(background="wheat")
        self.Canvas2_6.configure(borderwidth="4")
        self.Canvas2_6.configure(highlightbackground="wheat")
        self.Canvas2_6.configure(relief="solid")
        self.Canvas2_6.configure(selectbackground="#d9d9d9")

        self.Canvas2_7 = tk.Canvas(self.Frame2)
        self.Canvas2_7.place(x=7, y=444, height=210, width=210)
        self.Canvas2_7.configure(background="wheat")
        self.Canvas2_7.configure(borderwidth="4")
        self.Canvas2_7.configure(highlightbackground="wheat")
        self.Canvas2_7.configure(relief="solid")
        self.Canvas2_7.configure(selectbackground="#d9d9d9")

        self.Canvas2_8 = tk.Canvas(self.Frame2)
        self.Canvas2_8.place(x=226, y=444, height=210, width=210)
        self.Canvas2_8.configure(background="wheat")
        self.Canvas2_8.configure(borderwidth="4")
        self.Canvas2_8.configure(highlightbackground="wheat")
        self.Canvas2_8.configure(relief="solid")
        self.Canvas2_8.configure(selectbackground="#d9d9d9")

        self.Canvas2_9 = tk.Canvas(self.Frame2)
        self.Canvas2_9.place(x=446, y=444, height=210, width=210)
        self.Canvas2_9.configure(background="wheat")
        self.Canvas2_9.configure(borderwidth="4")
        self.Canvas2_9.configure(highlightbackground="wheat")
        self.Canvas2_9.configure(relief="solid")
        self.Canvas2_9.configure(selectbackground="#d9d9d9")

def start_up():
    bondegaard_support.main()

if __name__ == '__main__':
    bondegaard_support.main()




